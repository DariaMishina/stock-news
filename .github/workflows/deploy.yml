name: CI
#
on:
  push:
    branches: [ main ]

jobs:
  build_docker_backend:
    runs-on: ubuntu-latest
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:_backend__ -f ./backend/Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:_backend__
        
  build_docker_mle:
    runs-on: ubuntu-latest
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:_mle__ -f ./data_preprocess/Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:_mle__
        
  create_envs:
    needs: [build_docker_backend, build_docker_mle]
    runs-on: ubuntu-latest

    steps:
      - name: Run Checkout
        uses: actions/checkout@master
        
      - name: Create venv file
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: ./.github/workflows/sample.env.j2
          output_file: ./.github/workflows/sample.env
        env:
          URL: ${{ secrets['HOST'] }}
          API_KEY: ${{ secrets['API_KEY'] }}
            
          # Передаем файлы на сервер
      - name: Send file on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATEKEY }}
          source: "./.github/workflows"
          target: "~/stock-news"
          
  deploy:
    needs: [create_envs]
    runs-on: ubuntu-latest
    
    steps:
      - name: Run deploy
        uses: appleboy/ssh-action@master
        with:
          script: bash server.sh
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATEKEY }}
